---
import { Image } from 'astro:assets'
import { getCollection, getEntry } from 'astro:content'

import Heading from './Heading.astro'

export interface Props {
    authorId: string
    showPosts?: boolean
    headingLevel: 1 | 2 | 3 | 4 | 5 | 6
}

const { authorId, showPosts, headingLevel = 2 } = Astro.props

const entry = await getEntry('author', authorId)
if (!entry) {
    throw new Error(`Author with id ${authorId} not found`)
}

const { Content } = await entry.render()
const { firstname, lastname, avatar } = entry.data

const posts = await getCollection('blog')
const authorPosts = posts
    .filter((post) => post.data.draft === false)
    .filter((post) => post.data.authors.includes(authorId))
    .map((post) => ({
        url: `/blog/${post.slug}`,
        data: post.data,
    }))
---

<div class="not-prose flex flex-col items-start gap-4 rounded-2xl p-4">
    <Heading headingLevel={headingLevel} class="text-xl">
        {firstname}&nbsp;{lastname}
    </Heading>
    <Image class="h-24 w-24 rounded-full" src={avatar} width={96} height={96} alt={`${firstname} ${lastname}`} />
    <div><Content /></div>

    <div class="flex flex-col gap-2">
        {
            showPosts && authorPosts.length > 0 && (
                <>
                    <p class="mb-0">My posts ({authorPosts.length})</p>
                    <ul class="list-outside list-disc pl-4">
                        {authorPosts.map((post) => (
                            <li>
                                <a class="text-link no-underline hover:underline" href={post.url}>
                                    {post.data.title}
                                </a>
                            </li>
                        ))}
                    </ul>
                </>
            )
        }
    </div>
</div>
